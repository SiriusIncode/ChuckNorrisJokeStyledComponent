{"ast":null,"code":"import _slicedToArray from \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { useEffect, useState } from \"react\";\nimport Comments from \"./Components/Comments\";\nimport Button from \"./styledComponents/Button\";\nimport Input, { Textarea } from \"./styledComponents/Input\";\nimport Wrapper, { JokeWrapper, ButtonsWrapper } from \"./styledComponents/Wrapper\";\nimport Avatar from \"./styledComponents/Avatar\";\nimport loadJoke from \"./services/jokeService\";\nimport loadComments from \"./services/comentService\";\nimport generateRandomColor from \"./helpers\";\nimport { setComment } from \"./reducers/commentReducer\";\nimport { setName } from \"./reducers/nameReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setJoke } from './reducers/jokeReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var joke = useSelector(function (state) {\n    return state.joke.value;\n  });\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var comment = useSelector(function (state) {\n    return state.comment.value;\n  });\n  var name = useSelector(function (state) {\n    return state.name.value;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    loadJoke(function () {\n      return dispatch(setJoke());\n    });\n    loadComments(setComments);\n  }, []);\n\n  var sendComment = function sendComment() {\n    var copyComments = comments;\n    copyComments.unshift({\n      time: new Date(),\n      body: comment,\n      icoColor: generateRandomColor(),\n      name: name\n    });\n    setComments(copyComments);\n    setName(\"\");\n    setComment(\"\");\n  };\n\n  var resetInputs = function resetInputs() {\n    setName(\"\");\n    setComment(\"\");\n  };\n\n  if (!joke.value) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chuck Norris Joke\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(JokeWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: joke.icon_url,\n          alt: \"Chuck Norris\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: joke.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"User Name\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          return dispatch(setName(e.target.value));\n        },\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        as: \"textarea\",\n        placeholder: \"Comment\",\n        onChange: function onChange(e) {\n          return dispatch(setComment(e.target.value));\n        },\n        value: comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: sendComment,\n          children: \"send comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          secondary: true,\n          onClick: resetInputs,\n          children: \"reset inputs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          secondary: true,\n          onClick: function onClick() {\n            return loadJoke(setJoke);\n          },\n          children: \"reset joke\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      commentsList: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"q3cWRfbz9nnWSVR2GFUFF2yVsOg=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/src/App.js"],"names":["useEffect","useState","Comments","Button","Input","Textarea","Wrapper","JokeWrapper","ButtonsWrapper","Avatar","loadJoke","loadComments","generateRandomColor","setComment","setName","useDispatch","useSelector","setJoke","App","joke","state","value","comments","setComments","comment","name","dispatch","sendComment","copyComments","unshift","time","Date","body","icoColor","resetInputs","icon_url","e","target"],"mappings":"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","sourcesContent":["import \"./styles.css\";\nimport { useEffect, useState } from \"react\";\nimport Comments from \"./Components/Comments\";\nimport Button from \"./styledComponents/Button\";\nimport Input, { Textarea } from \"./styledComponents/Input\";\nimport Wrapper, {\n  JokeWrapper,\n  ButtonsWrapper,\n} from \"./styledComponents/Wrapper\";\nimport Avatar from \"./styledComponents/Avatar\";\nimport loadJoke from \"./services/jokeService\";\nimport loadComments from \"./services/comentService\";\nimport generateRandomColor from \"./helpers\";\nimport { setComment } from \"./reducers/commentReducer\";\nimport { setName } from \"./reducers/nameReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {setJoke} from './reducers/jokeReducer';\n\nexport default function App() {\n  const joke = useSelector(state => state.joke.value);\n  const [comments, setComments] = useState([]);\n  const comment = useSelector((state) => state.comment.value);\n  const name = useSelector((state) => state.name.value);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    loadJoke(() => dispatch(setJoke()));\n    loadComments(setComments);\n  }, []);\n\n  const sendComment = () => {\n    const copyComments = comments;\n    copyComments.unshift({\n      time: new Date(),\n      body: comment,\n      icoColor: generateRandomColor(),\n      name,\n    });\n\n    setComments(copyComments);\n    setName(\"\");\n    setComment(\"\");\n  };\n\n  const resetInputs = () => {\n    setName(\"\");\n    setComment(\"\");\n  };\n\n  if ( !joke.value) return null;\n\n  return (\n    <div className=\"App\">\n      <h1>Chuck Norris Joke</h1>\n\n      <Wrapper>\n        <JokeWrapper>\n          <Avatar src={joke.icon_url} alt=\"Chuck Norris\" />\n          <p>{joke.value}</p>\n        </JokeWrapper>\n        <Input\n          placeholder=\"User Name\"\n          type=\"text\"\n          onChange={(e) => dispatch(setName(e.target.value))}\n          value={name}\n        />\n        <Textarea\n          as=\"textarea\"\n          placeholder=\"Comment\"\n          onChange={(e) => dispatch(setComment(e.target.value))}\n          value={comment}\n        />\n        <ButtonsWrapper>\n          <Button primary onClick={sendComment}>\n            send comment\n          </Button>\n          <Button secondary onClick={resetInputs}>\n            reset inputs\n          </Button>\n          <Button secondary onClick={() => loadJoke(setJoke)}>\n            reset joke\n          </Button>\n        </ButtonsWrapper>\n      </Wrapper>\n\n      <Comments commentsList={comments} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}