{"ast":null,"code":"import _toConsumableArray from \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { useEffect, useState } from \"react\";\nimport Comments from \"./Components/Comments\";\nimport Button from \"./styledComponents/Button\";\nimport Input, { Textarea } from \"./styledComponents/Input\";\nimport Wrapper, { JokeWrapper, ButtonsWrapper } from \"./styledComponents/Wrapper\";\nimport Avatar from \"./styledComponents/Avatar\";\nimport loadJoke from \"./services/jokeService\";\nimport loadComments from \"./services/comentService\";\nimport generateRandomColor from \"./helpers\";\nimport { setComment } from \"./reducers/commentReducer\";\nimport { setName } from \"./reducers/nameReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setJoke, getJoke } from \"./reducers/jokeReducer\";\nimport { setComments } from \"./reducers/commentsReducer\";\nimport { nanoid } from '@reduxjs/toolkit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var joke = useSelector(function (state) {\n    return state.joke.value;\n  });\n  var comments = useSelector(function (state) {\n    return state.comments.value;\n  });\n  var comment = useSelector(function (state) {\n    return state.comment.value;\n  });\n  var name = useSelector(function (state) {\n    return state.name.value;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    console.log;\n    loadJoke(function (joke) {\n      return dispatch(setJoke(joke));\n    });\n    loadComments(function (comment) {\n      return dispatch(setComments(comment));\n    });\n  }, []);\n\n  var sendComment = function sendComment() {\n    var copyComments = _toConsumableArray(comments);\n\n    copyComments.unshift({\n      time: new Date().toString(),\n      body: comment,\n      icoColor: generateRandomColor(),\n      name: name,\n      id: nanoid()\n    });\n    dispatch(setComments(copyComments));\n    dispatch(setName(\"\"));\n    dispatch(setComment(\"\"));\n  };\n\n  var resetInputs = function resetInputs() {\n    dispatch(setName(\"\"));\n    dispatch(setComment(\"\"));\n  };\n\n  if (!Object.keys(joke).length && !comments.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loaderWreapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lds-facebook\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chuck Norris Joke\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(JokeWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: joke.icon_url,\n          alt: \"Chuck Norris\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: joke.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"User Name\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          return dispatch(setName(e.target.value));\n        },\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        as: \"textarea\",\n        placeholder: \"Comment\",\n        onChange: function onChange(e) {\n          return dispatch(setComment(e.target.value));\n        },\n        value: comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: sendComment,\n          children: \"send comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          secondary: true,\n          onClick: resetInputs,\n          children: \"reset inputs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          secondary: true,\n          onClick: function onClick() {\n            return loadJoke(function (joke) {\n              return dispatch(setJoke(joke));\n            });\n          },\n          children: \"reset joke\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      commentsList: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"veOoiaVjGye8MuSEpGyeDtM+HYM=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/src/App.js"],"names":["useEffect","useState","Comments","Button","Input","Textarea","Wrapper","JokeWrapper","ButtonsWrapper","Avatar","loadJoke","loadComments","generateRandomColor","setComment","setName","useDispatch","useSelector","setJoke","getJoke","setComments","nanoid","App","joke","state","value","comments","comment","name","dispatch","console","log","sendComment","copyComments","unshift","time","Date","toString","body","icoColor","id","resetInputs","Object","keys","length","icon_url","e","target"],"mappings":"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","sourcesContent":["import \"./styles.css\";\nimport { useEffect, useState } from \"react\";\nimport Comments from \"./Components/Comments\";\nimport Button from \"./styledComponents/Button\";\nimport Input, { Textarea } from \"./styledComponents/Input\";\nimport Wrapper, {\n  JokeWrapper,\n  ButtonsWrapper,\n} from \"./styledComponents/Wrapper\";\nimport Avatar from \"./styledComponents/Avatar\";\nimport loadJoke from \"./services/jokeService\";\nimport loadComments from \"./services/comentService\";\nimport generateRandomColor from \"./helpers\";\nimport { setComment } from \"./reducers/commentReducer\";\nimport { setName } from \"./reducers/nameReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setJoke, getJoke } from \"./reducers/jokeReducer\";\nimport { setComments } from \"./reducers/commentsReducer\";\nimport { nanoid } from '@reduxjs/toolkit'\n\nexport default function App() {\n  const joke = useSelector((state) => state.joke.value);\n  const comments = useSelector((state) => state.comments.value);\n  const comment = useSelector((state) => state.comment.value);\n  const name = useSelector((state) => state.name.value);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log\n      loadJoke((joke) => dispatch(setJoke(joke)))\n      loadComments((comment) => dispatch(setComments(comment)))\n  }, []);\n\n  const sendComment = () => {\n    const copyComments = [...comments];\n    copyComments.unshift({\n      time: (new Date()).toString(),\n      body: comment,\n      icoColor: generateRandomColor(),\n      name,\n      id: nanoid()\n    });\n\n    dispatch(setComments(copyComments));\n    dispatch(setName(\"\"));\n    dispatch(setComment(\"\"));\n  };\n\n  const resetInputs = () => {\n    dispatch(setName(\"\"));\n    dispatch(setComment(\"\"));\n  };\n\n  if (!Object.keys(joke).length && !comments.length)\n    return (\n      <div className=\"loaderWreapper\">\n        <div className=\"lds-facebook\">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    );\n\n  return (\n    <div className=\"App\">\n      <h1>Chuck Norris Joke</h1>\n\n      <Wrapper>\n        <JokeWrapper>\n          <Avatar src={joke.icon_url} alt=\"Chuck Norris\" />\n          <p>{joke.value}</p>\n        </JokeWrapper>\n        <Input\n          placeholder=\"User Name\"\n          type=\"text\"\n          onChange={(e) => dispatch(setName(e.target.value))}\n          value={name}\n        />\n        <Textarea\n          as=\"textarea\"\n          placeholder=\"Comment\"\n          onChange={(e) => dispatch(setComment(e.target.value))}\n          value={comment}\n        />\n        <ButtonsWrapper>\n          <Button primary onClick={sendComment}>\n            send comment\n          </Button>\n          <Button secondary onClick={resetInputs}>\n            reset inputs\n          </Button>\n          <Button\n            secondary\n            onClick={() => loadJoke((joke) => dispatch(setJoke(joke)))}\n          >\n            reset joke\n          </Button>\n        </ButtonsWrapper>\n      </Wrapper>\n\n      <Comments commentsList={comments} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}