{"ast":null,"code":"import _slicedToArray from \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { useEffect, useState } from \"react\";\nimport Comments from \"./Components/Comments\";\nimport Button from \"./styledComponents/Button\";\nimport Input, { Textarea } from \"./styledComponents/Input\";\nimport Wrapper, { JokeWrapper, ButtonsWrapper } from \"./styledComponents/Wrapper\";\nimport Avatar from \"./styledComponents/Avatar\";\nimport loadJoke from \"./services/jokeService\";\nimport loadComments from \"./services/comentService\";\nimport generateRandomColor from \"./helpers\";\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.joke.value;\n  }),\n      _useSelector2 = _slicedToArray(_useSelector, 2),\n      joke = _useSelector2[0],\n      setJoke = _useSelector2[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      comment = _useState4[0],\n      setComment = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  console.log(loadJoke);\n  useEffect(function () {\n    loadJoke();\n    loadComments();\n  }, []);\n\n  var sendComment = function sendComment() {\n    var copyComments = comments;\n    copyComments.unshift({\n      time: new Date(),\n      body: comment,\n      icoColor: generateRandomColor(),\n      name: name\n    });\n    setComments(copyComments);\n    setName(\"\");\n    setComment(\"\");\n  };\n\n  var resetInputs = function resetInputs() {\n    setName(\"\");\n    setComment(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chuck Norris Joke\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(JokeWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: joke.icon_url,\n          alt: \"Chuck Norris\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: joke.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"User Name\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          setName(e.target.value);\n        },\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        as: \"textarea\",\n        placeholder: \"Comment\",\n        onChange: function onChange(e) {\n          setComment(e.target.value);\n        },\n        value: comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: sendComment,\n          children: \"send comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          secondary: true,\n          onClick: resetInputs,\n          children: \"reset inputs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          secondary: true,\n          onClick: loadJoke,\n          children: \"reset joke\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      commentsList: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ihnc7MsZJveWoadu0oJ34r+L/bM=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/src/App.js"],"names":["useEffect","useState","Comments","Button","Input","Textarea","Wrapper","JokeWrapper","ButtonsWrapper","Avatar","loadJoke","loadComments","generateRandomColor","useSelector","App","state","joke","value","setJoke","comments","setComments","comment","setComment","name","setName","console","log","sendComment","copyComments","unshift","time","Date","body","icoColor","resetInputs","icon_url","e","target"],"mappings":";;;;;AAAA,OAAO,cAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,0BAAhC;AACA,OAAOC,OAAP,IAAkBC,WAAlB,EAA+BC,cAA/B,QAAqD,4BAArD;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,mBAAP,MAAgC,WAAhC;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,qBAAwBD,WAAW,CAAC,UAAAE,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,KAAf;AAAA,GAAN,CAAnC;AAAA;AAAA,MAAOD,IAAP;AAAA,MAAaE,OAAb;;AACA,kBAAgCjB,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOkB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA8BnB,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOoB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAwBrB,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOsB,IAAP;AAAA,MAAaC,OAAb;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,QAAQ;AACRC,IAAAA,YAAY;AACb,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAMgB,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAMC,YAAY,GAAGT,QAArB;AACAS,IAAAA,YAAY,CAACC,OAAb,CAAqB;AACnBC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EADa;AAEnBC,MAAAA,IAAI,EAAEX,OAFa;AAGnBY,MAAAA,QAAQ,EAAErB,mBAAmB,EAHV;AAInBW,MAAAA,IAAI,EAAJA;AAJmB,KAArB;AAOAH,IAAAA,WAAW,CAACQ,YAAD,CAAX;AACAJ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAZD;;AAcA,MAAMY,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBV,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,OAAD;AAAA,8BACE,QAAC,WAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAEN,IAAI,CAACmB,QAAlB;AAA4B,UAAA,GAAG,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAInB,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,KAAD;AACE,QAAA,WAAW,EAAC,WADd;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAE,kBAACmB,CAAD,EAAO;AACfZ,UAAAA,OAAO,CAACY,CAAC,CAACC,MAAF,CAASpB,KAAV,CAAP;AACD,SALH;AAME,QAAA,KAAK,EAAEM;AANT;AAAA;AAAA;AAAA;AAAA,cALF,eAaE,QAAC,QAAD;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,WAAW,EAAC,SAFd;AAGE,QAAA,QAAQ,EAAE,kBAACa,CAAD,EAAO;AACfd,UAAAA,UAAU,CAACc,CAAC,CAACC,MAAF,CAASpB,KAAV,CAAV;AACD,SALH;AAME,QAAA,KAAK,EAAEI;AANT;AAAA;AAAA;AAAA;AAAA,cAbF,eAqBE,QAAC,cAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,MAAf;AAAgB,UAAA,OAAO,EAAEM,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,SAAS,MAAjB;AAAkB,UAAA,OAAO,EAAEO,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,MAAD;AAAQ,UAAA,SAAS,MAAjB;AAAkB,UAAA,OAAO,EAAExB,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAqCE,QAAC,QAAD;AAAU,MAAA,YAAY,EAAES;AAAxB;AAAA;AAAA;AAAA;AAAA,YArCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GA1EuBL,G;UAEED,W;;;KAFFC,G","sourcesContent":["import \"./styles.css\";\nimport { useEffect, useState } from \"react\";\nimport Comments from \"./Components/Comments\";\nimport Button from \"./styledComponents/Button\";\nimport Input, { Textarea } from \"./styledComponents/Input\";\nimport Wrapper, { JokeWrapper, ButtonsWrapper } from \"./styledComponents/Wrapper\";\nimport Avatar from \"./styledComponents/Avatar\";\nimport loadJoke from \"./services/jokeService\";\nimport loadComments from \"./services/comentService\";\nimport generateRandomColor from \"./helpers\";\nimport {useSelector} from 'react-redux';\n\nexport default function App() {\n\n  const [joke, setJoke] = useSelector(state => state.joke.value);\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  console.log(loadJoke)\n  \n  useEffect(() => {\n    loadJoke();\n    loadComments();\n  }, []);\n\n  const sendComment = () => {\n    const copyComments = comments;\n    copyComments.unshift({\n      time: new Date(),\n      body: comment,\n      icoColor: generateRandomColor(),\n      name\n    });\n\n    setComments(copyComments);\n    setName(\"\");\n    setComment(\"\");\n  };\n\n  const resetInputs = () => {\n    setName(\"\");\n    setComment(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Chuck Norris Joke</h1>\n\n      <Wrapper>\n        <JokeWrapper>\n          <Avatar src={joke.icon_url} alt=\"Chuck Norris\" />\n          <p>{joke.value}</p>\n        </JokeWrapper>\n        <Input\n          placeholder=\"User Name\"\n          type=\"text\"\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n          value={name}\n        />\n        <Textarea\n          as=\"textarea\"\n          placeholder=\"Comment\"\n          onChange={(e) => {\n            setComment(e.target.value);\n          }}\n          value={comment}\n        />\n        <ButtonsWrapper>\n          <Button primary onClick={sendComment}>\n            send comment\n          </Button>\n          <Button secondary onClick={resetInputs}>\n            reset inputs\n          </Button>\n          <Button secondary onClick={loadJoke}>\n            reset joke\n          </Button>\n        </ButtonsWrapper>\n      </Wrapper>\n\n      <Comments commentsList={comments} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}