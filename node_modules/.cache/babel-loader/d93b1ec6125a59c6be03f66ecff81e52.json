{"ast":null,"code":"import _regeneratorRuntime from \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { toast } from \"react-toastify\";\n\nvar loadJoke = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://api.chucknorris.io/jokes/rando\");\n\n          case 2:\n            res = _context.sent;\n\n            if (!(res.status !== 200)) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error('Not found');\n\n          case 7:\n            ;\n            return _context.abrupt(\"return\", res.json());\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadJoke() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default loadJoke;","map":{"version":3,"sources":["/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/src/services/jokeService.js"],"names":["toast","loadJoke","fetch","res","status","Error","json"],"mappings":";;AAAA,SAASA,KAAT,QAAsB,gBAAtB;;AAEA,IAAMC,QAAQ;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGC,KAAK,CAAC,wCAAD,CADR;;AAAA;AACTC,YAAAA,GADS;;AAAA,kBAGXA,GAAG,CAACC,MAAJ,KAAe,GAHJ;AAAA;AAAA;AAAA;;AAAA,kBAIL,IAAIC,KAAJ,CAAU,WAAV,CAJK;;AAAA;AAOd;AAPc,6CASRF,GAAG,CAACG,IAAJ,EATQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARL,QAAQ;AAAA;AAAA;AAAA,GAAd;;AAYA,eAAeA,QAAf","sourcesContent":["import { toast } from \"react-toastify\";\n\nconst loadJoke = async () => {\n  const res = await fetch(\"https://api.chucknorris.io/jokes/rando\")\n    \n  if (res.status !== 200) {\n      throw new Error('Not found');\n      toast.error()\n      toast.error(`Joke loading failed: ${jokeError}`);\n  };\n\n  return res.json()\n};\n\nexport default loadJoke;\n"]},"metadata":{},"sourceType":"module"}