{"ast":null,"code":"import _toConsumableArray from \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { useEffect, useState } from \"react\";\nimport Comments from \"./Components/Comments\";\nimport Button from \"./styledComponents/Button\";\nimport Input, { Textarea } from \"./styledComponents/Input\";\nimport Wrapper, { JokeWrapper, ButtonsWrapper } from \"./styledComponents/Wrapper\";\nimport Avatar from \"./styledComponents/Avatar\";\nimport generateRandomColor from \"./helpers\";\nimport { setComment } from \"./reducers/commentReducer\";\nimport { setName } from \"./reducers/nameReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getJoke } from \"./reducers/jokeReducer\";\nimport { setComments, getComments } from \"./reducers/commentsReducer\";\nimport { nanoid } from '@reduxjs/toolkit';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport statuses from \"./statuses\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var joke = useSelector(function (state) {\n    return state.joke.value;\n  });\n  var jokeError = useSelector(function (state) {\n    return state.joke.error;\n  });\n  var commentError = useSelector(function (state) {\n    return state.comment.error;\n  });\n  var comments = useSelector(function (state) {\n    return state.comments.value;\n  });\n  var comment = useSelector(function (state) {\n    return state.comment.value;\n  });\n  var name = useSelector(function (state) {\n    return state.name.value;\n  });\n  var jokeStatus = useSelector(function (state) {\n    return state.joke.status;\n  });\n  var commentsStatus = useSelector(function (state) {\n    return state.comments.status;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(getJoke());\n    dispatch(getComments());\n  }, []);\n\n  var sendComment = function sendComment() {\n    var copyComments = _toConsumableArray(comments);\n\n    copyComments.unshift({\n      time: new Date().toString(),\n      body: comment,\n      icoColor: generateRandomColor(),\n      name: name,\n      id: nanoid()\n    });\n    dispatch(setComments(copyComments));\n    dispatch(setName(\"\"));\n    dispatch(setComment(\"\"));\n  };\n\n  var resetInputs = function resetInputs() {\n    dispatch(setName(\"\"));\n    dispatch(setComment(\"\"));\n  };\n\n  if (jokeError) {\n    console.log(jokeError);\n    toast.error(\"Joke loading failed: \".concat(jokeError));\n  }\n\n  if (jokeError) {}\n\n  if (jokeStatus === statuses.loading || commentsStatus === statuses.loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loaderWreapper\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lds-facebook\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chuck Norris Joke\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(JokeWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: joke.icon_url,\n          alt: \"Chuck Norris\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: joke.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"User Name\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          return dispatch(setName(e.target.value));\n        },\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        as: \"textarea\",\n        placeholder: \"Comment\",\n        onChange: function onChange(e) {\n          return dispatch(setComment(e.target.value));\n        },\n        value: comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: sendComment,\n          children: \"send comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          secondary: true,\n          onClick: resetInputs,\n          children: \"reset inputs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          secondary: true,\n          onClick: function onClick() {\n            dispatch(getJoke());\n          },\n          children: \"reset joke\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      commentsList: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OmEZBBiruT/uaPQ4qSwNWz0P3TA=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/src/App.js"],"names":["useEffect","useState","Comments","Button","Input","Textarea","Wrapper","JokeWrapper","ButtonsWrapper","Avatar","generateRandomColor","setComment","setName","useDispatch","useSelector","getJoke","setComments","getComments","nanoid","ToastContainer","toast","statuses","App","joke","state","value","jokeError","error","commentError","comment","comments","name","jokeStatus","status","commentsStatus","dispatch","sendComment","copyComments","unshift","time","Date","toString","body","icoColor","id","resetInputs","console","log","loading","icon_url","e","target"],"mappings":"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","sourcesContent":["import \"./styles.css\";\nimport { useEffect, useState } from \"react\";\nimport Comments from \"./Components/Comments\";\nimport Button from \"./styledComponents/Button\";\nimport Input, { Textarea } from \"./styledComponents/Input\";\nimport Wrapper, {\n  JokeWrapper,\n  ButtonsWrapper,\n} from \"./styledComponents/Wrapper\";\nimport Avatar from \"./styledComponents/Avatar\";\nimport generateRandomColor from \"./helpers\";\nimport { setComment } from \"./reducers/commentReducer\";\nimport { setName } from \"./reducers/nameReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getJoke } from \"./reducers/jokeReducer\";\nimport { setComments, getComments } from \"./reducers/commentsReducer\";\nimport { nanoid } from '@reduxjs/toolkit';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport statuses from \"./statuses\";\n\nexport default function App() {\n  const joke = useSelector((state) => state.joke.value);\n  const jokeError = useSelector(state => state.joke.error);\n  const commentError = useSelector(state => state.comment.error);\n  const comments = useSelector((state) => state.comments.value);\n  const comment = useSelector((state) => state.comment.value);\n  const name = useSelector((state) => state.name.value);\n  const jokeStatus = useSelector(state => state.joke.status);\n  const commentsStatus = useSelector(state => state.comments.status)\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n      dispatch(getJoke());\n      dispatch(getComments());\n  }, []);\n\n  const sendComment = () => {\n    const copyComments = [...comments];\n    copyComments.unshift({\n      time: (new Date()).toString(),\n      body: comment,\n      icoColor: generateRandomColor(),\n      name,\n      id: nanoid()\n    });\n\n    dispatch(setComments(copyComments));\n    dispatch(setName(\"\"));\n    dispatch(setComment(\"\"));\n  };\n\n  const resetInputs = () => {\n    dispatch(setName(\"\"));\n    dispatch(setComment(\"\"));\n  };\n\n  if (jokeError) {\n    console.log(jokeError)\n    toast.error(`Joke loading failed: ${jokeError}`);\n  }\n\n  if (jokeError ) {\n\n  }\n\n  if (jokeStatus === statuses.loading || commentsStatus === statuses.loading)\n    return (\n      <div className=\"loaderWreapper\">\n      <ToastContainer /> \n\n        <div className=\"lds-facebook\">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    );\n\n  return (\n    <div className=\"App\">\n\n      <h1>Chuck Norris Joke</h1>\n\n      <Wrapper>\n        <JokeWrapper>\n          <Avatar src={joke.icon_url} alt=\"Chuck Norris\" />\n          <p>{joke.value}</p>\n        </JokeWrapper>\n        <Input\n          placeholder=\"User Name\"\n          type=\"text\"\n          onChange={(e) => dispatch(setName(e.target.value))}\n          value={name}\n        />\n        <Textarea\n          as=\"textarea\"\n          placeholder=\"Comment\"\n          onChange={(e) => dispatch(setComment(e.target.value))}\n          value={comment}\n        />\n        <ButtonsWrapper>\n          <Button primary onClick={sendComment}>\n            send comment\n          </Button>\n          <Button secondary onClick={resetInputs}>\n            reset inputs\n          </Button>\n          <Button\n            secondary\n            onClick={() => {dispatch(getJoke())}}\n          >\n            reset joke\n          </Button>\n        </ButtonsWrapper>\n      </Wrapper>\n\n      <Comments commentsList={comments} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}