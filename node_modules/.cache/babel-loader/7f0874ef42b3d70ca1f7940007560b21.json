{"ast":null,"code":"import _slicedToArray from \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/src/Comments.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport Wrapper, { Comment, JokeCommentUserWrapper } from \"./Wrapper\";\nimport ComentBody, { ComentAvatar, UserName, CommentDate } from \"./ComentContent\";\nimport { dateToString } from \"./helpers\";\nimport Pagination from \"./Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Comments = function Comments(_ref) {\n  _s();\n\n  var commentsList = _ref.commentsList;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(10),\n      _useState4 = _slicedToArray(_useState3, 2),\n      range = _useState4[0],\n      setRange = _useState4[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Wrapper, {\n      children: commentsList.slice((page - 1) * range, page * range).map(function (comment, index) {\n        return /*#__PURE__*/_jsxDEV(Comment, {\n          index: index,\n          children: [/*#__PURE__*/_jsxDEV(ComentAvatar, {\n            background: comment.icoColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Wrapper, {\n            children: [/*#__PURE__*/_jsxDEV(JokeCommentUserWrapper, {\n              children: [/*#__PURE__*/_jsxDEV(UserName, {\n                children: comment.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, _this), comment.time ? /*#__PURE__*/_jsxDEV(CommentDate, {\n                children: dateToString(comment.time)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 21\n              }, _this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(ComentBody, {\n              children: comment.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, _this)]\n        }, comment.time ? comment.time : comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Pagination, {\n      size: Math.ceil(commentsList.length / range),\n      current: page,\n      range: range,\n      setRange: setRange,\n      onChange: function onChange(page) {\n        setPage(page);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Comments, \"rTQx+d2IwCTGfrHaGaNBzQRtX+o=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/src/Comments.js"],"names":["React","useState","Wrapper","Comment","JokeCommentUserWrapper","ComentBody","ComentAvatar","UserName","CommentDate","dateToString","Pagination","Comments","commentsList","page","setPage","range","setRange","slice","map","comment","index","icoColor","name","time","body","id","Math","ceil","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,IAAkBC,OAAlB,EAA2BC,sBAA3B,QAAyD,WAAzD;AACA,OAAOC,UAAP,IACEC,YADF,EAEEC,QAFF,EAGEC,WAHF,QAIO,iBAJP;AAKA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAsB;AAAA;;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AACrC,kBAAwBX,QAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA,MAAOY,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA0Bb,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOc,KAAP;AAAA,MAAcC,QAAd;;AAEA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAA,gBACGJ,YAAY,CACVK,KADF,CACQ,CAACJ,IAAI,GAAG,CAAR,IAAaE,KADrB,EAC4BF,IAAI,GAAGE,KADnC,EAEEG,GAFF,CAEM,UAACC,OAAD,EAAUC,KAAV;AAAA,4BACH,QAAC,OAAD;AAEE,UAAA,KAAK,EAAEA,KAFT;AAAA,kCAIE,QAAC,YAAD;AAAc,YAAA,UAAU,EAAED,OAAO,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA,mBAJF,eAKE,QAAC,OAAD;AAAA,oCACE,QAAC,sBAAD;AAAA,sCACE,QAAC,QAAD;AAAA,0BAAWF,OAAO,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGH,OAAO,CAACI,IAAR,gBACC,QAAC,WAAD;AAAA,0BAAcd,YAAY,CAACU,OAAO,CAACI,IAAT;AAA1B;AAAA;AAAA;AAAA;AAAA,uBADD,GAEG,IAJN;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAOE,QAAC,UAAD;AAAA,wBAAaJ,OAAO,CAACK;AAArB;AAAA;AAAA;AAAA;AAAA,qBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF;AAAA,WACOL,OAAO,CAACI,IAAR,GAAeJ,OAAO,CAACI,IAAvB,GAA8BJ,OAAO,CAACM,EAD7C;AAAA;AAAA;AAAA;AAAA,iBADG;AAAA,OAFN;AADH;AAAA;AAAA;AAAA;AAAA,aADF,eAuBE,QAAC,UAAD;AACE,MAAA,IAAI,EAAEC,IAAI,CAACC,IAAL,CAAUf,YAAY,CAACgB,MAAb,GAAsBb,KAAhC,CADR;AAEE,MAAA,OAAO,EAAEF,IAFX;AAGE,MAAA,KAAK,EAAEE,KAHT;AAIE,MAAA,QAAQ,EAAEC,QAJZ;AAKE,MAAA,QAAQ,EAAE,kBAACH,IAAD,EAAU;AAClBC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,aAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAmCD,CAvCD;;GAAMF,Q;;KAAAA,Q;AAyCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport Wrapper, { Comment, JokeCommentUserWrapper } from \"./Wrapper\";\nimport ComentBody, {\n  ComentAvatar,\n  UserName,\n  CommentDate\n} from \"./ComentContent\";\nimport { dateToString } from \"./helpers\";\nimport Pagination from \"./Pagination\";\n\nconst Comments = ({ commentsList }) => {\n  const [page, setPage] = useState(1);\n  const [range, setRange] = useState(10);\n\n  return (\n    <div>\n      <Wrapper>\n        {commentsList\n          .slice((page - 1) * range, page * range)\n          .map((comment, index) => (\n            <Comment\n              key={comment.time ? comment.time : comment.id}\n              index={index}\n            >\n              <ComentAvatar background={comment.icoColor}></ComentAvatar>\n              <Wrapper>\n                <JokeCommentUserWrapper>\n                  <UserName>{comment.name}</UserName>\n                  {comment.time ? (\n                    <CommentDate>{dateToString(comment.time)}</CommentDate>\n                  ) : null}\n                </JokeCommentUserWrapper>\n                <ComentBody>{comment.body}</ComentBody>\n              </Wrapper>\n            </Comment>\n          ))}\n      </Wrapper>\n\n      <Pagination\n        size={Math.ceil(commentsList.length / range)}\n        current={page}\n        range={range}\n        setRange={setRange}\n        onChange={(page) => {\n          setPage(page);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}