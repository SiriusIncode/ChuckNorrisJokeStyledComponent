{"ast":null,"code":"import _regeneratorRuntime from \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _extraReducers;\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport loadJoke from '../services/jokeService';\nexport var jokeReducer = createSlice({\n  name: \"joke\",\n  initialState: {\n    value: {},\n    status: 'loading'\n  },\n  reducers: {\n    setJoke: function setJoke(state, action) {\n      state.value = action.payload;\n    }\n  },\n  extraReducers: (_extraReducers = {}, _defineProperty(_extraReducers, getJoke.pending, function (state) {\n    state.status = 'loading';\n  }), _defineProperty(_extraReducers, getJoke.fulfilled, function (state, action) {\n    state.status = 'success';\n    state.value = action.payload;\n  }), _extraReducers)\n});\nexport var getJoke = createAsyncThunk('joke', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var response;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return loadJoke();\n\n        case 2:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n})));\nvar setJoke = jokeReducer.actions.setJoke;\nexport { setJoke };\nexport default jokeReducer.reducer;","map":{"version":3,"sources":["/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/src/reducers/jokeReducer.js"],"names":["createSlice","createAsyncThunk","loadJoke","jokeReducer","name","initialState","value","status","reducers","setJoke","state","action","payload","extraReducers","getJoke","pending","fulfilled","response","actions","reducer"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,OAAO,IAAMC,WAAW,GAAGH,WAAW,CAAC;AACrCI,EAAAA,IAAI,EAAE,MAD+B;AAErCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,MAAM,EAAE;AAFI,GAFuB;AAMrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,iBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC1BD,MAAAA,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACC,OAArB;AACD;AAHO,GAN2B;AAWrCC,EAAAA,aAAa,wDACVC,OAAO,CAACC,OADE,EACQ,UAACL,KAAD,EAAW;AAC5BA,IAAAA,KAAK,CAACH,MAAN,GAAe,SAAf;AACD,GAHU,mCAIVO,OAAO,CAACE,SAJE,EAIU,UAACN,KAAD,EAAQC,MAAR,EAAmB;AACtCD,IAAAA,KAAK,CAACH,MAAN,GAAe,SAAf;AACAG,IAAAA,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACC,OAArB;AACD,GAPU;AAXwB,CAAD,CAA/B;AAsBP,OAAO,IAAME,OAAO,GAAGb,gBAAgB,CAAC,MAAD,wEAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACvBC,QAAQ,EADe;;AAAA;AACxCe,UAAAA,QADwC;AAAA,2CAEvCA,QAFuC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAT,GAAhC;AAKA,IAAQR,OAAR,GAAoBN,WAAW,CAACe,OAAhC,CAAQT,OAAR;;AACP,eAAeN,WAAW,CAACgB,OAA3B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport loadJoke from '../services/jokeService';\n\nexport const jokeReducer = createSlice({\n  name: \"joke\",\n  initialState: {\n    value: {},\n    status: 'loading', \n  },\n  reducers: {\n    setJoke: (state, action) => {\n      state.value = action.payload;\n    },\n  },\n  extraReducers: {\n    [getJoke.pending]: (state) => {\n      state.status = 'loading';\n    },\n    [getJoke.fulfilled]: (state, action) => {\n      state.status = 'success';\n      state.value = action.payload;\n    } \n  }\n});\n\nexport const getJoke = createAsyncThunk('joke', async () => {\n  const response = await loadJoke();\n  return response;\n})\n\nexport const { setJoke } = jokeReducer.actions;\nexport default jokeReducer.reducer;\n"]},"metadata":{},"sourceType":"module"}