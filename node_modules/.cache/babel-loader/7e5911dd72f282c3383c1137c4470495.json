{"ast":null,"code":"import _slicedToArray from \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { useEffect, useState } from \"react\";\nimport Comments from \"./Components/Comments\";\nimport Button from \"./styledComponents/Button\";\nimport Input, { Textarea } from \"./styledComponents/Input\";\nimport Wrapper, { JokeWrapper, ButtonsWrapper } from \"./styledComponents/Wrapper\";\nimport Avatar from \"./styledComponents/Avatar\";\nimport loadJoke from \"./services/jokeService\";\nimport loadComments from \"./services/comentService\";\nimport generateRandomColor from \"./helpers\";\nimport * as setComment from './reducers/commentReducer';\nimport * as setRange from './reducers/c';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      joke = _useState2[0],\n      setJoke = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      comments = _useState4[0],\n      setComments = _useState4[1];\n\n  var comment = useSelector(function (state) {\n    return state.comment.value;\n  });\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var dispatch = useDispatch();\n  console.log(setComment);\n  useEffect(function () {\n    loadJoke(setJoke);\n    loadComments(setComments);\n  }, []);\n\n  var sendComment = function sendComment() {\n    var copyComments = comments;\n    copyComments.unshift({\n      time: new Date(),\n      body: comment,\n      icoColor: generateRandomColor(),\n      name: name\n    });\n    setComments(copyComments);\n    setName(\"\");\n    setComment(\"\");\n  };\n\n  var resetInputs = function resetInputs() {\n    setName(\"\");\n    setComment(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chuck Norris Joke\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(JokeWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: joke.icon_url,\n          alt: \"Chuck Norris\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: joke.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"User Name\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          setName(e.target.value);\n        },\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        as: \"textarea\",\n        placeholder: \"Comment\",\n        onChange: function onChange(e) {\n          return dispatch(setComment(e.target.value));\n        },\n        value: comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: sendComment,\n          children: \"send comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          secondary: true,\n          onClick: resetInputs,\n          children: \"reset inputs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          secondary: true,\n          onClick: function onClick() {\n            return loadJoke(setJoke);\n          },\n          children: \"reset joke\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      commentsList: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"K2iMWJP9cSbPEhfdLNr36aIqJOM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/src/App.js"],"names":["useEffect","useState","Comments","Button","Input","Textarea","Wrapper","JokeWrapper","ButtonsWrapper","Avatar","loadJoke","loadComments","generateRandomColor","setComment","setRange","useDispatch","useSelector","App","joke","setJoke","comments","setComments","comment","state","value","name","setName","dispatch","console","log","sendComment","copyComments","unshift","time","Date","body","icoColor","resetInputs","icon_url","e","target"],"mappings":"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","sourcesContent":["import \"./styles.css\";\nimport { useEffect, useState } from \"react\";\nimport Comments from \"./Components/Comments\";\nimport Button from \"./styledComponents/Button\";\nimport Input, { Textarea } from \"./styledComponents/Input\";\nimport Wrapper, { JokeWrapper, ButtonsWrapper } from \"./styledComponents/Wrapper\";\nimport Avatar from \"./styledComponents/Avatar\";\nimport loadJoke from \"./services/jokeService\";\nimport loadComments from \"./services/comentService\";\nimport generateRandomColor from \"./helpers\";\nimport * as setComment from './reducers/commentReducer';\nimport * as setRange from './reducers/c'\nimport {useDispatch, useSelector} from 'react-redux';\n\nexport default function App() {\n  const [joke, setJoke] = useState({});\n  const [comments, setComments] = useState([]);\n  const comment = useSelector(state => state.comment.value);\n  const [name, setName] = useState(\"\");\n  const dispatch = useDispatch();\n  console.log(setComment);\n\n  useEffect(() => {\n    loadJoke(setJoke);\n    loadComments(setComments);\n  }, []);\n\n  const sendComment = () => {\n    const copyComments = comments;\n    copyComments.unshift({\n      time: new Date(),\n      body: comment,\n      icoColor: generateRandomColor(),\n      name,\n    });\n\n    setComments(copyComments);\n    setName(\"\");\n    setComment(\"\");\n  };\n\n  const resetInputs = () => {\n    setName(\"\");\n    setComment(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Chuck Norris Joke</h1>\n\n      <Wrapper>\n        <JokeWrapper>\n          <Avatar src={joke.icon_url} alt=\"Chuck Norris\" />\n          <p>{joke.value}</p>\n        </JokeWrapper>\n        <Input\n          placeholder=\"User Name\"\n          type=\"text\"\n          onChange={(e) => {\n             setName(e.target.value);\n          }}\n          value={name}\n        />\n        <Textarea\n          as=\"textarea\"\n          placeholder=\"Comment\"\n          onChange={(e) => dispatch(setComment(e.target.value))}\n          value={comment}\n        />\n        <ButtonsWrapper>\n          <Button primary onClick={sendComment}>\n            send comment\n          </Button>\n          <Button secondary onClick={resetInputs}>\n            reset inputs\n          </Button>\n          <Button secondary onClick={() => loadJoke(setJoke)}>\n            reset joke\n          </Button>\n        </ButtonsWrapper>\n      </Wrapper>\n\n      <Comments commentsList={comments} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}