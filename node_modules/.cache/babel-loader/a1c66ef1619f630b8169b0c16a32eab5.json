{"ast":null,"code":"import _regeneratorRuntime from \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { toast } from \"react-toastify\";\nimport generateRandomColor from \"../helpers\";\n\nvar loadComments = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(done) {\n    var getComments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://jsonplaceholder.typicode.com/comment\").then(function (res) {\n              res.json();\n\n              if (res.status !== 200) {\n                throw new Error('Not Found');\n              }\n            }).then(function (res) {\n              var comments = res.map(function (comment) {\n                return _objectSpread(_objectSpread({}, comment), {}, {\n                  icoColor: generateRandomColor()\n                });\n              });\n              if (done) done(comments);\n              return comments;\n            }).catch(function () {\n              toast.error('Comments loading error: Not Found');\n              return 'Not Found';\n            });\n\n          case 2:\n            getComments = _context.sent;\n            return _context.abrupt(\"return\", getComments);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadComments(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default loadComments;","map":{"version":3,"sources":["/home/sirius/Desktop/projects/ChuckNorrisJokeStyledComponent/src/services/comentService.js"],"names":["toast","generateRandomColor","loadComments","done","fetch","then","res","json","status","Error","comments","map","comment","icoColor","catch","error","getComments"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAOC,mBAAP,MAAgC,YAAhC;;AAEA,IAAMC,YAAY;AAAA,sEAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOC,KAAK,CAAC,8CAAD,CAAL,CACvBC,IADuB,CAClB,UAACC,GAAD,EAAS;AACbA,cAAAA,GAAG,CAACC,IAAJ;;AACA,kBAAGD,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAuB;AACrB,sBAAM,IAAIC,KAAJ,CAAU,WAAV,CAAN;AACD;AACF,aANuB,EAOvBJ,IAPuB,CAOlB,UAACC,GAAD,EAAS;AACb,kBAAMI,QAAQ,GAAGJ,GAAG,CAACK,GAAJ,CAAQ,UAACC,OAAD;AAAA,uDACpBA,OADoB;AAEvBC,kBAAAA,QAAQ,EAAEZ,mBAAmB;AAFN;AAAA,eAAR,CAAjB;AAIA,kBAAIE,IAAJ,EAAUA,IAAI,CAACO,QAAD,CAAJ;AACV,qBAAOA,QAAP;AACD,aAduB,EAcrBI,KAdqB,CAcf,YAAM;AACbd,cAAAA,KAAK,CAACe,KAAN,CAAY,mCAAZ;AACA,qBAAO,WAAP;AACD,aAjBuB,CADP;;AAAA;AACbC,YAAAA,WADa;AAAA,6CAoBVA,WApBU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZd,YAAY;AAAA;AAAA;AAAA,GAAlB;;AAuBA,eAAeA,YAAf","sourcesContent":["import { toast } from \"react-toastify\";\nimport generateRandomColor from \"../helpers\";\n\nconst loadComments = async (done) => {\n  const getComments = await fetch(\"https://jsonplaceholder.typicode.com/comment\")\n    .then((res) => {\n      res.json();\n      if(res.status !== 200) {\n        throw new Error('Not Found');\n      }\n    })\n    .then((res) => {\n      const comments = res.map((comment) => ({\n        ...comment,\n        icoColor: generateRandomColor(),\n      }));\n      if (done) done(comments);\n      return comments;\n    }).catch(() => {\n      toast.error('Comments loading error: Not Found');\n      return 'Not Found'\n    });\n\n    return getComments;\n};\n\nexport default loadComments;\n"]},"metadata":{},"sourceType":"module"}